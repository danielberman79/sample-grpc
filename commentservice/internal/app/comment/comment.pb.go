// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commentservice/api/comment.proto

package comment

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRequest struct {
	Comment              string   `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8824cdff2c16b081, []int{0}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment              string               `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Name                 string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8824cdff2c16b081, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Response) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "comment.CreateRequest")
	proto.RegisterType((*Response)(nil), "comment.Response")
}

func init() {
	proto.RegisterFile("commentservice/api/comment.proto", fileDescriptor_8824cdff2c16b081)
}

var fileDescriptor_8824cdff2c16b081 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x3f, 0x4b, 0x03, 0x41,
	0x10, 0xc5, 0xbd, 0x33, 0x44, 0x33, 0x62, 0xc0, 0x2d, 0xe4, 0x38, 0xfc, 0x13, 0xae, 0x4a, 0xb5,
	0x07, 0x11, 0x0b, 0x0b, 0x0b, 0x4d, 0x61, 0x7f, 0x5a, 0xd9, 0xc8, 0x66, 0x6f, 0x3c, 0x16, 0xb2,
	0x7f, 0xdc, 0x9d, 0xf8, 0x05, 0xfc, 0xe2, 0xc2, 0xee, 0xad, 0x46, 0xb0, 0x9b, 0x79, 0xcc, 0x3c,
	0x7e, 0xef, 0xc1, 0xe5, 0xe0, 0x9d, 0x0c, 0xe8, 0x3f, 0x95, 0xc4, 0x56, 0x38, 0xd5, 0x4a, 0xab,
	0x35, 0x1a, 0xe2, 0xce, 0x5b, 0xb2, 0xec, 0x68, 0x5c, 0xeb, 0xeb, 0xc1, 0xda, 0x61, 0x8b, 0x6d,
	0x94, 0x37, 0xbb, 0xf7, 0x96, 0x94, 0xc6, 0x40, 0x42, 0xbb, 0x74, 0xd9, 0xdc, 0xc3, 0xe9, 0xda,
	0xa3, 0x20, 0xec, 0xf0, 0x63, 0x87, 0x81, 0x58, 0x05, 0xf9, 0xb9, 0x2a, 0x16, 0xc5, 0x72, 0xd6,
	0xe5, 0x95, 0x31, 0x98, 0x18, 0xa1, 0xb1, 0x2a, 0xa3, 0x1c, 0xe7, 0xe6, 0xab, 0x80, 0xe3, 0x0e,
	0x83, 0xb3, 0x26, 0x20, 0x9b, 0x43, 0xa9, 0xfa, 0xf1, 0xab, 0x54, 0xfd, 0xbe, 0x55, 0xf9, 0xbf,
	0xd5, 0xe1, 0xaf, 0x15, 0xbb, 0x03, 0x90, 0x91, 0xa4, 0x7f, 0x13, 0x54, 0x4d, 0x16, 0xc5, 0xf2,
	0x64, 0x55, 0xf3, 0xc4, 0xcf, 0x33, 0x3f, 0x7f, 0xc9, 0xfc, 0xdd, 0x6c, 0xbc, 0x7e, 0xa0, 0xd5,
	0x13, 0xcc, 0xd7, 0xc9, 0xf9, 0x39, 0x55, 0xc2, 0x6e, 0x61, 0x9a, 0x62, 0xb1, 0x73, 0x9e, 0xab,
	0xf9, 0x93, 0xb3, 0x3e, 0xfb, 0xd1, 0x33, 0x7f, 0x73, 0xf0, 0x78, 0xf5, 0x7a, 0xb1, 0x5f, 0xac,
	0x32, 0x84, 0xde, 0x88, 0x6d, 0x6e, 0x77, 0x33, 0x8d, 0x1c, 0x37, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xc9, 0xf4, 0xd0, 0x91, 0x7f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CommentServiceClient is the client API for CommentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommentServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Response, error)
}

type commentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCommentServiceClient(cc grpc.ClientConnInterface) CommentServiceClient {
	return &commentServiceClient{cc}
}

func (c *commentServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/comment.CommentService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommentServiceServer is the server API for CommentService service.
type CommentServiceServer interface {
	Create(context.Context, *CreateRequest) (*Response, error)
}

// UnimplementedCommentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCommentServiceServer struct {
}

func (*UnimplementedCommentServiceServer) Create(ctx context.Context, req *CreateRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterCommentServiceServer(s *grpc.Server, srv CommentServiceServer) {
	s.RegisterService(&_CommentService_serviceDesc, srv)
}

func _CommentService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.CommentService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comment.CommentService",
	HandlerType: (*CommentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CommentService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "commentservice/api/comment.proto",
}
